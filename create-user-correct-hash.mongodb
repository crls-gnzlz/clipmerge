// ========================================
// 🆕 Create User with Correct Hash
// ========================================
// 
// Instructions:
// 1. Open MongoDB Compass
// 2. Connect to your MongoDB instance
// 3. Open the MongoDB Shell (mongosh) in Compass
// 4. Copy and paste this script
// 5. Press Enter to execute
//
// ========================================

// Switch to clipchain database
db = db.getSiblingDB('clipchain');

print("🆕 Creating user with correct password hash...");

// This hash is for password "test123" generated with bcrypt salt rounds 12
// It's the same hash that the backend expects
const correctPasswordHash = "$2a$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewdBPj4J/8HwqK8i";

// Create a test user with known credentials
const testUser = {
  username: "test_user",
  email: "test@clipchain.com",
  password: correctPasswordHash,
  displayName: "Test User",
  bio: "Test user created with correct hash",
  isVerified: true,
  stats: { totalClips: 0, totalChains: 0, totalViews: 0 },
  createdAt: new Date(),
  updatedAt: new Date()
};

// Remove existing user if exists
const deleteResult = db.users.deleteOne({ username: "test_user" });
if (deleteResult.deletedCount > 0) {
  print("🗑️ Existing test_user removed");
}

// Insert new user
const insertResult = db.users.insertOne(testUser);

if (insertResult.insertedId) {
  print("✅ test_user created successfully");
  print(`   ID: ${insertResult.insertedId}`);
  print("\n🔑 Login credentials:");
  print("   Username: test_user");
  print("   Password: test123");
  print("   Email: test@clipchain.com");
  
  // Verify user was created
  const createdUser = db.users.findOne({ username: "test_user" });
  if (createdUser) {
    print("\n✅ Verification successful:");
    print(`   Username: ${createdUser.username}`);
    print(`   Email: ${createdUser.email}`);
    print(`   Is Verified: ${createdUser.isVerified}`);
    print(`   Created: ${createdUser.createdAt}`);
  }
} else {
  print("❌ Failed to create test_user");
}

print("\n🎯 Next steps:");
print("1. Try logging in with test_user / test123");
print("2. If it works, the hash was correct");
print("3. If it fails, there's a backend issue");
